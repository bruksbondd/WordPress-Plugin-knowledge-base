{"version":3,"sources":["App.module.css","components/Category/Ctegory.module.css","components/Title/Title.module.css","components/Post/Post.module.css","assets/images/arrow.svg","assets/images/web.svg","components/Search/Search.module.css","api/fetchData.js","redux/postsReducer.js","redux/categoryReducer.js","components/Category/Category.js","components/Category/CategoryContainer.js","components/Title/Title.js","components/Title/TitleContainer.js","components/Post/Post.js","components/Post/PostContainer.js","components/Search/Search.js","components/Search/SearchContainer.js","App.js","AppContainer.js","serviceWorker.js","redux/appReducer.js","redux/redux-store.js","index.js"],"names":["module","exports","host","window","location","origin","fetchData","url","a","fetch","response","ok","json","loadData","initialState","posts","activePost","urlLink","searchPost","setActivePost","type","setUrl","slug","setSearchPost","postsReducer","state","action","categories","activeCategoryId","activeCategoryTitle","id","categoryReducer","title","Category","handleClickCategory","showChildCategory","handleShowTitle","category","map","item","child","filter","i","parent","childCategory","length","onClick","name","key","className","styles","category_item","category_item_active","parent_category","src","arrow","alt","CategoryContainer","useState","setShowChildCategory","dispatch","useDispatch","useSelector","useEffect","data","Title","activeClass","onHandleGetPost","postTitle","categoryTitle","post","activeTitle","titleName","web","dangerouslySetInnerHTML","__html","rendered","titleCategory","TitleContainer","searchTitle","history","useHistory","setActiveClass","handleClickPost","handleGetPost","push","postTitleCategory","base","searchPostTitle","handleSearch","changeActiveClass","Post","Content","content","titlePost","center","color","height","width","PostContainer","Search","onTextChange","inputText","search","onChange","e","autoFocus","value","SearchContainer","setInputText","text","getSate","toLowerCase","includes","currentTarget","trim","App","path","app","nameBase","withRouter","props","hash","replace","then","catId","Boolean","hostname","match","loading","appReducer","rootReducer","combineReducers","createStore","applyMiddleware","thunk","target","document","getElementById","ReactDOM","render","store","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e57439b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__34Utf\",\"category\":\"App_category__1iZ2Y\",\"nameBase\":\"App_nameBase__iFDN2\",\"title\":\"App_title__2quam\",\"post\":\"App_post__1tRJK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"category_item\":\"Ctegory_category_item__2kEuF\",\"parent_category\":\"Ctegory_parent_category__2BfwJ\",\"category_item_active\":\"Ctegory_category_item_active__3nden\",\"categories\":\"Ctegory_categories__1O1FQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__2cB5I\",\"titleCategory\":\"Title_titleCategory__oUUDX\",\"titleName\":\"Title_titleName__25rPo\",\"activeTitle\":\"Title_activeTitle__1hsPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3r0_O\",\"center\":\"Post_center__2--xG\",\"titlePost\":\"Post_titlePost__1ssNy\"};","module.exports = __webpack_public_path__ + \"static/media/arrow.3b6d785c.svg\";","module.exports = __webpack_public_path__ + \"static/media/web.89220aa9.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__36dx9\"};","export const host = window.location.origin\r\n\r\nconst fetchData = (url) => {\r\n     const loadData = async () => {\r\n         const response = await fetch(`${host}/wp-json/wp/v2/${url}`);\r\n         if(!response.ok) {\r\n             // oups! something went wrong\r\n             return;\r\n         }\r\n         return await response.json();\r\n     }\r\n     return loadData();\r\n}\r\n\r\nexport default fetchData","import fetchData from \"../api/fetchData\"\r\nimport {activeCategoryId} from \"./categoryReducer\"\r\n\r\nconst SET_POSTS = 'SET_POSTS'\r\nconst SET_ACTIVE_POSTS = 'SET_ACTIVE_POSTS'\r\nconst SET_URL_LINK = 'SET_URL_LINK'\r\nconst SEARCH_POST = 'SEARCH_POST'\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  activePost: null,\r\n  urlLink: '',\r\n  searchPost: []\r\n}\r\n\r\nconst postsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.posts\r\n      }\r\n    case SET_ACTIVE_POSTS:\r\n      return {\r\n        ...state,\r\n        activePost: action.activePost\r\n      }\r\n    case SET_URL_LINK:\r\n      return {\r\n        ...state,\r\n        urlLink: action.slug\r\n      }\r\n    case SEARCH_POST:\r\n      return {\r\n        ...state,\r\n        searchPost: action.searchPost\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst setCategories = (posts) => ({type: SET_POSTS, posts})\r\nconst setActivePost = (activePost) => ({type: SET_ACTIVE_POSTS, activePost})\r\nexport const setUrl = (slug) => ({type: SET_URL_LINK, slug})\r\nexport const setSearchPost = (searchPost) => ({type: SEARCH_POST, searchPost})\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  const data = await fetchData(`knowledge_base?base`)\r\n  dispatch(setCategories(data))\r\n}\r\n\r\nexport const handleGetPost = (id, slug) => async (dispatch) => {\r\n  if (slug) {\r\n    dispatch(setUrl(slug))\r\n  }\r\n  const data = await fetchData(`knowledge_base/${id}`)\r\n  dispatch(setActivePost(data))\r\n}\r\n\r\nexport const urlGetPost = (slug) => async (dispatch, getSate) => {\r\n  dispatch(setUrl(slug))\r\n  fetchData(`knowledge_base/?slug=${slug}`)\r\n    .then((data) => {\r\n      const catId = data[0].base[0]\r\n\r\n      dispatch(setActivePost(data[0]))\r\n      dispatch(activeCategoryId(catId))\r\n    })\r\n}\r\n\r\nexport const searchTitle = (text) => async (dispatch, getSate) => {\r\n  const data = getSate().post.posts.map(item => {\r\n    if (item && item.title.rendered.toLowerCase().includes(text) === true) {\r\n      return item\r\n    }\r\n    return null\r\n  })\r\n  dispatch(setSearchPost(data))\r\n}\r\n\r\nexport default postsReducer","import fetchData from \"../api/fetchData\"\r\nimport {setSearchPost} from \"./postsReducer\"\r\n\r\nconst SET_CATEGORY = 'SET_CATEGORY'\r\nconst SET_ACTIVE_CATEGORY_ID = 'SET_ACTIVE_CATEGORY'\r\nconst SET_ACTIVE_CATEGORY_TITTLE = 'SET_ACTIVE_CATEGORY_TITTLE'\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  activeCategoryId: null,\r\n  activeCategoryTitle: null\r\n}\r\n\r\nconst categoryReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categories: action.categories\r\n      }\r\n    case SET_ACTIVE_CATEGORY_ID:\r\n      return {\r\n        ...state,\r\n        activeCategoryId: action.id\r\n      }\r\n    case SET_ACTIVE_CATEGORY_TITTLE:\r\n      return {\r\n        ...state,\r\n        activeCategoryTitle: action.title\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst setCategories = (categories) => ({type: SET_CATEGORY, categories})\r\nexport const activeCategoryId = (id) => ({type: SET_ACTIVE_CATEGORY_ID, id})\r\nconst activeCategoryTitle= (title) => ({type: SET_ACTIVE_CATEGORY_TITTLE, title})\r\n\r\nexport const getCategories = () => async (dispatch) => {\r\n  const data = await fetchData(`base?per_page=50`)\r\n  dispatch(setCategories(data))\r\n}\r\n\r\nexport const handleShowTitle = (id, title) => (dispatch) => {\r\n  dispatch(activeCategoryId(id))\r\n  dispatch(activeCategoryTitle(title))\r\n  dispatch(setSearchPost([]))\r\n}\r\n\r\nexport default categoryReducer","import React from 'react'\r\nimport styles from './Ctegory.module.css'\r\nimport arrow from './../../assets/images/arrow.svg'\r\n\r\nconst Category = ({handleClickCategory, showChildCategory, categories, handleShowTitle}) => {\r\n\r\n  const category = categories && categories.map((item) => {\r\n    let child = categories.filter(i => i.parent === item.id)\r\n    let childCategory = child.length > 0 && child.map(i => {\r\n      return (\r\n        <li onClick={() => handleShowTitle(i.id, i.name)} key={i.id}>\r\n          <span></span>{i.name}</li>\r\n      )\r\n    })\r\n\r\n    if (item.parent !== 0) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={`${styles.category_item} ${showChildCategory === item.id && styles.category_item_active}`}\r\n        key={item.id}>\r\n        <h2 className={styles.parent_category}\r\n            onClick={() => handleClickCategory(item.id)}>{item.name} <img\r\n          src={arrow} alt=\"arrow\"/></h2>\r\n        {showChildCategory === item.id && <ul>{childCategory}</ul>}\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className={styles.categories}>\r\n      {category}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Category\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {getCategories, handleShowTitle} from \"../../redux/categoryReducer\"\r\nimport Category from \"./Category\"\r\n\r\nconst CategoryContainer = () => {\r\n  const [showChildCategory, setShowChildCategory] = useState(null)\r\n  const dispatch = useDispatch()\r\n  const categories = useSelector((state) => state.category.categories)\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories())\r\n  }, [dispatch])\r\n\r\n  const handleClickShowTitle = (id, title) => {\r\n    dispatch(handleShowTitle(id, title))\r\n  }\r\n\r\n  const handleClickCategory = (id) => {\r\n    setShowChildCategory(id)\r\n  }\r\n\r\n  return (\r\n    <Category categories={categories} handleShowTitle={handleClickShowTitle}\r\n              handleClickCategory={handleClickCategory}\r\n              showChildCategory={showChildCategory}/>\r\n  )\r\n}\r\n\r\nexport default CategoryContainer\r\n\r\n","import React from 'react'\r\nimport styles from './Title.module.css'\r\nimport web from './../../assets/images/web.svg'\r\n\r\nconst Title = ({activeCategoryTitle, activeClass, onHandleGetPost, postTitle}) => {\r\n\r\n  const categoryTitle = postTitle && postTitle.map((post) => {\r\n    if (!post) {\r\n      return null\r\n    }\r\n    return (\r\n      <div\r\n        className={activeClass === post.id ? styles.activeTitle : styles.titleName}\r\n        key={post.id} onClick={() => onHandleGetPost(post.id, post.slug)}>\r\n        <img src={web} alt=\"icon_name\"/><h3\r\n        dangerouslySetInnerHTML={{__html: post.title.rendered}}></h3>\r\n      </div>\r\n    )\r\n  })\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3\r\n        className={styles.titleCategory}>{activeCategoryTitle || 'Category'}</h3>\r\n      <div className={styles.title}>\r\n        {categoryTitle}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Title","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport Title from \"./Title\"\r\nimport {getPosts, handleGetPost} from \"../../redux/postsReducer\"\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nconst TitleContainer = ({searchTitle}) => {\r\n  const dispatch = useDispatch()\r\n  const posts = useSelector((state) => state.post.posts)\r\n  let searchPost = useSelector((state) => state.post.searchPost)\r\n  const activePost = useSelector((state) => state.post.activePost)\r\n  const activeCategoryId = useSelector((state) => state.category.activeCategoryId)\r\n  const activeCategoryTitle = useSelector((state) => state.category.activeCategoryTitle)\r\n  const history = useHistory();\r\n  const [activeClass, setActiveClass] = useState()\r\n\r\n  useEffect(() => {\r\n    if (activePost) {\r\n      setActiveClass(activePost.id)\r\n    }\r\n  }, [activePost])\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosts())\r\n  }, [dispatch])\r\n\r\n  const changeActiveClass = (id) => {\r\n    setActiveClass(id)\r\n  }\r\n\r\n  const handleClickPost = (id, slug) => {\r\n    dispatch(handleGetPost(id, slug))\r\n    history.push('/knowledge-base/')\r\n    history.push(`#/${slug}`)\r\n  }\r\n\r\n  const onHandleGetPost = (id, slug) => {\r\n    handleClickPost(id, slug)\r\n    changeActiveClass(id)\r\n  }\r\n\r\n  const postTitleCategory = posts && posts.map((post) => {\r\n    const changedCategory = post.base.filter(i => i === activeCategoryId)\r\n    if (changedCategory.length > 0) {\r\n      return post\r\n    }\r\n    return null\r\n  })\r\n\r\n  const searchPostTitle = searchPost && searchPost.map((post) => {\r\n    return post\r\n  })\r\n\r\n  let postTitle = searchPost.length ? searchPostTitle : postTitleCategory\r\n\r\n  return (\r\n    <Title handleSearch={searchTitle} activeClass={activeClass}\r\n           onHandleGetPost={onHandleGetPost} postTitle={postTitle}\r\n           activeCategoryId={activeCategoryId}\r\n           activeCategoryTitle={activeCategoryTitle}/>\r\n  )\r\n}\r\nexport default TitleContainer","import React from 'react'\r\nimport styles from './Post.module.css'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst Post = ({activePost}) => {\r\n\r\n  const Content = () => {\r\n    return (\r\n      <div className={styles.post}\r\n           dangerouslySetInnerHTML={{__html: activePost.content.rendered}}></div>\r\n    )\r\n  }\r\n\r\n  if (!activePost) {\r\n    return (\r\n      <div className={styles.center}>\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#3890C6\"\r\n          height={100}\r\n          width={100}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <h3 className={styles.titlePost}>{activePost.title.rendered}</h3>\r\n      <Content/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport Post from \"./Post\";\r\n\r\nconst PostContainer = () => {\r\n\r\n  const activePost = useSelector((state) => state.post.activePost)\r\n\r\n  return (\r\n    <Post activePost={activePost}/>\r\n  )\r\n}\r\nexport default PostContainer","import React from \"react\"\r\nimport styles from './Search.module.css'\r\n\r\nconst Search = ({onTextChange, inputText}) => {\r\n\r\n  return (\r\n    <div className={styles.search}>\r\n      <input onChange={e => onTextChange(e)}\r\n             autoFocus={true}\r\n             value={inputText}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search","import React, {useState} from 'react'\r\nimport {useDispatch} from \"react-redux\"\r\nimport Search from \"./Search\";\r\nimport {searchTitle} from \"../../redux/postsReducer\";\r\n\r\nconst SearchContainer = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [inputText, setInputText] = useState('')\r\n\r\n  const handleSearch = (text) => {\r\n    dispatch(searchTitle(text))\r\n  }\r\n\r\n  const onTextChange = (e) => {\r\n    setInputText(e.currentTarget.value)\r\n    e.currentTarget.value.length > 3 && handleSearch(inputText.toLowerCase().trim())\r\n  }\r\n\r\n  return (\r\n    <Search onTextChange={onTextChange} inputText={inputText}/>\r\n  )\r\n}\r\nexport default SearchContainer","import React from 'react'\nimport {Route} from 'react-router-dom'\nimport styles from './App.module.css'\nimport CategoryContainer from \"./components/Category/CategoryContainer\"\nimport TitleContainer from \"./components/Title/TitleContainer\"\nimport PostContainer from \"./components/Post/PostContainer\"\nimport SearchContainer from \"./components/Search/SearchContainer\"\n\nconst App = () => {\n  return (\n    <Route path={`/knowledge-base/:slug?`}>\n      <div className={styles.app}>\n        <div className={styles.category}>\n          <h3 className={styles.nameBase}>Knowledge Base</h3>\n          <SearchContainer/>\n          <CategoryContainer/>\n        </div>\n        <div className={styles.title}>\n          <TitleContainer/>\n        </div>\n        <div className={styles.post}>\n          <PostContainer/>\n        </div>\n      </div>\n    </Route>\n  )\n}\nexport default App\n\n\n\n\n","import React, {useEffect} from \"react\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport App from \"./App\"\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {urlGetPost} from \"./redux/postsReducer\"\r\n\r\nconst AppContainer = (props) => {\r\n  const dispatch = useDispatch()\r\n  const {hash} = props.history.location\r\n  const urlLink = hash.replace('#/', '')\r\n\r\n  useEffect(() => {\r\n    if (urlLink) {\r\n      dispatch(urlGetPost(urlLink))\r\n    }\r\n  }, [dispatch, urlLink])\r\n\r\n  return (\r\n    <App />\r\n  )\r\n}\r\n\r\nexport default withRouter(AppContainer)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const LOAD_DATA = 'LOAD_DATA'\r\n\r\nconst initialState = {\r\n  loading: true\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_DATA:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default appReducer","import {createStore, applyMiddleware, combineReducers} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport appReducer from \"./appReducer\";\r\nimport categoryReducer from \"./categoryReducer\";\r\nimport postsReducer from \"./postsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  category: categoryReducer,\r\n  post: postsReducer\r\n})\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk))","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport AppContainer from './AppContainer.js'\nimport * as serviceWorker from './serviceWorker'\nimport {BrowserRouter} from \"react-router-dom\"\nimport store from \"./redux/redux-store\"\nimport {Provider} from \"react-redux\"\n\nconst target = document.getElementById('erw-root')\nif (target) {\n  ReactDOM.render(<BrowserRouter><Provider\n    store={store}><AppContainer/></Provider></BrowserRouter>, target)\n}\n\nserviceWorker.unregister();"],"sourceRoot":""}